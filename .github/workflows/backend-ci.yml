name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        working-directory: backend
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root

      - name: Run ruff
        working-directory: backend
        run: poetry run ruff check app tests

      - name: Run black --check
        working-directory: backend
        run: poetry run black --check app tests

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kiddozz_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      APP_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/kiddozz_test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        working-directory: backend
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root

      - name: Run database migrations
        working-directory: backend
        run: poetry run alembic upgrade head

      - name: Run tests
        working-directory: backend
        run: poetry run make test